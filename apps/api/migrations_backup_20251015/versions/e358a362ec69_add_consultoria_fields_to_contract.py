"""add_consultoria_fields_to_contract

Revision ID: e358a362ec69
Revises: 86c3811f0705
Create Date: 2025-10-03 16:02:44.333710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e358a362ec69'
down_revision: Union[str, None] = '86c3811f0705'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('client_enrollments', schema=None) as batch_op:
        batch_op.drop_index('ix_client_enrollments_client_id')

    op.drop_table('client_enrollments')
    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.drop_index('uq_open_case_per_client', postgresql_where="((status)::text = ANY ((ARRAY['open'::character varying, 'in_progress'::character varying, 'pending'::character varying])::text[]))")

    with op.batch_alter_table('contracts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('consultoria_valor_liquido', sa.Numeric(precision=14, scale=2), nullable=True))
        batch_op.add_column(sa.Column('signed_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('agent_user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['agent_user_id'], ['id'])

    with op.batch_alter_table('finance_expenses', schema=None) as batch_op:
        batch_op.drop_index('ix_finance_expenses_date')

    with op.batch_alter_table('finance_incomes', schema=None) as batch_op:
        batch_op.alter_column('income_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('finance_incomes', schema=None) as batch_op:
        batch_op.alter_column('income_name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('finance_expenses', schema=None) as batch_op:
        batch_op.create_index('ix_finance_expenses_date', ['date'], unique=False)

    with op.batch_alter_table('contracts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('agent_user_id')
        batch_op.drop_column('created_by')
        batch_op.drop_column('signed_at')
        batch_op.drop_column('consultoria_valor_liquido')

    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.create_index('uq_open_case_per_client', ['client_id'], unique=True, postgresql_where="((status)::text = ANY ((ARRAY['open'::character varying, 'in_progress'::character varying, 'pending'::character varying])::text[]))")

    op.create_table('client_enrollments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('matricula', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('orgao', sa.VARCHAR(length=180), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='client_enrollments_client_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='client_enrollments_pkey'),
    sa.UniqueConstraint('client_id', 'matricula', name='uq_enrollment_client_matricula', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('client_enrollments', schema=None) as batch_op:
        batch_op.create_index('ix_client_enrollments_client_id', ['client_id'], unique=False)

    # ### end Alembic commands ###
