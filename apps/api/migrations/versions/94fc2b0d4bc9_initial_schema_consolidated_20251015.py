"""initial_schema_consolidated_20251015

Revision ID: 94fc2b0d4bc9
Revises: 
Create Date: 2025-10-15 06:41:50.049033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94fc2b0d4bc9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('ix_notifications_user_id')

    op.drop_table('notifications')
    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.drop_index('idx_cases_assigned_user_id')

    with op.batch_alter_table('contracts', schema=None) as batch_op:
        batch_op.drop_index('idx_contracts_agent_user_id')
        batch_op.drop_index('idx_contracts_case_id')
        batch_op.drop_index('idx_contracts_created_at')
        batch_op.drop_index('idx_contracts_disbursed_at')
        batch_op.drop_index('idx_contracts_signed_at')
        batch_op.drop_index('idx_contracts_status')
        batch_op.drop_index('idx_contracts_status_dates')

    with op.batch_alter_table('external_client_incomes', schema=None) as batch_op:
        batch_op.alter_column('nome_cliente',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=180),
               existing_nullable=True)
        batch_op.alter_column('banks_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
        batch_op.alter_column('coeficiente',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_external_income_cpf')
        batch_op.drop_index('ix_external_income_created_by')
        batch_op.drop_index('ix_external_income_owner_date')
        batch_op.create_index('ix_external_income_date', ['date'], unique=False)
        batch_op.create_index('ix_external_income_owner', ['owner_user_id'], unique=False)

    with op.batch_alter_table('payroll_lines', schema=None) as batch_op:
        batch_op.alter_column('batch_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payroll_lines', schema=None) as batch_op:
        batch_op.alter_column('batch_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('external_client_incomes', schema=None) as batch_op:
        batch_op.drop_index('ix_external_income_owner')
        batch_op.drop_index('ix_external_income_date')
        batch_op.create_index('ix_external_income_owner_date', ['owner_user_id', 'date'], unique=False)
        batch_op.create_index('ix_external_income_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_external_income_cpf', ['cpf_cliente'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('coeficiente',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('banks_json',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
        batch_op.alter_column('nome_cliente',
               existing_type=sa.String(length=180),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)

    with op.batch_alter_table('contracts', schema=None) as batch_op:
        batch_op.create_index('idx_contracts_status_dates', ['status', 'signed_at', 'disbursed_at'], unique=False)
        batch_op.create_index('idx_contracts_status', ['status'], unique=False)
        batch_op.create_index('idx_contracts_signed_at', ['signed_at'], unique=False)
        batch_op.create_index('idx_contracts_disbursed_at', ['disbursed_at'], unique=False)
        batch_op.create_index('idx_contracts_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_contracts_case_id', ['case_id'], unique=False)
        batch_op.create_index('idx_contracts_agent_user_id', ['agent_user_id'], unique=False)

    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.create_index('idx_cases_assigned_user_id', ['assigned_user_id'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('ix_notifications_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###
